{"version":3,"sources":["containers/MineField/mineField.module.scss","components/Footer/footer.module.scss","components/Header/header.module.scss","containers/MineFieldParams/mineFieldParams.module.scss","components/Face/face.module.scss","containers/Indicators/indicators.module.scss","containers/Minesweeper/minesweeper.module.scss","components/Cell/cell.module.scss","components/Footer/index.tsx","components/Header/index.tsx","contexts/minesweeper.ts","utils/addId.ts","constants/mineFieldsParams.ts","hooks/useDidUpdate.ts","utils/mineFieldChecker.ts","utils/indexUtils.ts","utils/neighborsUtils.ts","hooks/useMineField.ts","utils/formatCount.ts","components/Counter/index.tsx","components/Face/index.tsx","hooks/useCallbackRef.ts","hooks/useInterval.ts","containers/Indicators/index.tsx","components/Cell/index.tsx","containers/MineField/index.tsx","components/Radio/index.tsx","containers/MineFieldParams/index.tsx","containers/Minesweeper/index.tsx","App.tsx","setupIcons.ts","index.tsx"],"names":["module","exports","Footer","className","styles","footer","link","href","target","rel","icon","Date","getFullYear","memo","Header","header","MinesweeperContext","createContext","mineField","mineFieldParams","mineFieldStatus","setMineFieldParams","setup","openCell","toggleFlag","openNeighbors","reset","MinesweeperProvider","Provider","addId","item","id","nanoid","smallMineFieldParams","name","width","height","minesCount","mineFieldsParams","useDidUpdate","callback","didMount","useRef","deps","useEffect","current","MineFieldChecker","this","some","isBusted","isMined","isVisible","IndexUtils","length","index","rowIndex","columnIndex","isValidArrayIndex","NeighborsUtils","indexUtils","to2D","indexes","rowIndexOffset","columnIndexOffset","targetRowIndex","targetColumnIndex","push","to1D","cell","getIndexes","isFlagged","countMined","countBy","key","reduce","count","useMineField","useState","emptyMineField","useMemo","Array","from","setMineField","initialMineFieldStatus","hiddenMinesCount","setMineFieldStatus","neighborsUtils","getFloodFilledMineField","draftCallback","produce","draft","floodFill","canFloodFill","forEach","neighbor","getBustedMineField","isWrong","mineFieldChecker","prevMineFieldStatus","isSolved","prevMineField","restIndexes","difference","range","minedIndexes","Set","size","add","Math","floor","random","value","isSetup","canOpen","formatCount","toString","Counter","Face","frown","smile","onClick","type","face","useCallbackRef","callbackRef","useCallback","args","call","useInterval","interval","intervalId","setInterval","clearInterval","Indicators","useContext","secondsCount","setSecondsCount","handleFaceClick","indicators","Cell","onMouseDown","onContextMenu","visibleStyles","classNames","visible","handleContextMenu","busted","wrong","event","aria-label","MineField","handleCellClick","handleCellMouseDown","nativeEvent","addEventListener","handleMouseUp","which","removeEventListener","handleCellContextMenu","data-testid","mine_field","preventDefault","row","disabled","style","Number","parseFloat","cellStyles","cellSize","map","Radio","checked","onChange","defaultChecked","MineFieldParams","handleMineFieldParamsChange","mine_field_params","radio","Minesweeper","minesweeper","App","library","faGithub","faBomb","faFlag","faMeh","faFrown","faSmile","setupIcons","render","document","getElementById"],"mappings":"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","file":"static/js/main.aef7d08b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mine_field\":\"mineField_mine_field__2Fl0L\",\"row\":\"mineField_row__35wCK\",\"row_9\":\"mineField_row_9__2tIGm\",\"row_16\":\"mineField_row_16__3WJBK\",\"row_30\":\"mineField_row_30__2cLbb\",\"disabled\":\"mineField_disabled__deIQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__3SziO\",\"link\":\"footer_link__2dFa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2yLQj\",\"link\":\"header_link__3R6BL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mine_field_params\":\"mineFieldParams_mine_field_params__1t4La\",\"radio\":\"mineFieldParams_radio__2JQc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"face\":\"face_face__1V5r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indicators\":\"indicators_indicators__xiJJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minesweeper\":\"minesweeper_minesweeper__24ziS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellSize\":\"32px\",\"cell\":\"cell_cell__14Twb\",\"visible\":\"cell_visible__Ladne\",\"busted\":\"cell_busted__3Eypx\",\"wrong\":\"cell_wrong__VEfOs\",\"value_1\":\"cell_value_1__23PsV\",\"value_2\":\"cell_value_2__1Q9Ag\",\"value_3\":\"cell_value_3__1_bSN\",\"value_4\":\"cell_value_4__Tvv7G\",\"value_5\":\"cell_value_5__pfAPd\",\"value_6\":\"cell_value_6__19hZL\",\"value_7\":\"cell_value_7__1IqTn\",\"value_8\":\"cell_value_8__2-ysP\"};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { memo } from 'react';\r\n\r\nimport styles from './footer.module.scss';\r\n\r\nconst Footer = () => (\r\n  <footer className={styles.footer}>\r\n    <span>\r\n      Powered by\r\n      <a\r\n        className={styles.link}\r\n        href=\"https://github.com/FakeMetalFan\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <FontAwesomeIcon icon={['fab', 'github']} />\r\n      </a>\r\n      &copy;\r\n      <span>{new Date().getFullYear()}</span>\r\n    </span>\r\n  </footer>\r\n);\r\n\r\nexport default memo(Footer);\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { memo } from 'react';\r\n\r\nimport styles from './header.module.scss';\r\n\r\nconst Header = () => (\r\n  <header className={styles.header}>\r\n    Minesweeper\r\n    <a\r\n      className={styles.link}\r\n      href=\"https://github.com/FakeMetalFan/minesweeper\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <FontAwesomeIcon icon={['fab', 'github']} />\r\n    </a>\r\n  </header>\r\n);\r\n\r\nexport default memo(Header);\r\n","import useMineField from 'hooks/useMineField';\nimport { createContext } from 'react';\n\nconst MinesweeperContext = createContext<ReturnType<typeof useMineField>>({\n  mineField: [],\n  mineFieldParams: {} as MineFieldParams,\n  mineFieldStatus: {} as MineFieldStatus,\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  setMineFieldParams: () => {},\n  setup: () => {},\n  openCell: () => {},\n  toggleFlag: () => {},\n  openNeighbors: () => {},\n  reset: () => {},\n});\n\nexport const { Provider: MinesweeperProvider } = MinesweeperContext;\n\nexport default MinesweeperContext;\n","import { nanoid } from 'nanoid';\n\nconst addId = <T extends Record<string, unknown>>(item: T) => ({\n  ...item,\n  id: nanoid(),\n});\n\nexport default addId;\n","import addId from 'utils/addId';\n\nexport const smallMineFieldParams = addId({\n  name: 'Beginner',\n  width: 9,\n  height: 9,\n  minesCount: 10,\n});\n\nconst mineFieldsParams = [\n  smallMineFieldParams,\n  addId({\n    name: 'Intermediate',\n    width: 16,\n    height: 16,\n    minesCount: 40,\n  }),\n  addId({\n    name: 'Expert',\n    width: 30,\n    height: 16,\n    minesCount: 99,\n  }),\n];\n\nexport default mineFieldsParams;\n","import { useEffect, useRef } from 'react';\n\nconst useDidUpdate = (callback: () => void, ...deps: unknown[]) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) {\n      callback();\n    } else {\n      didMount.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useDidUpdate;\n","class MineFieldChecker {\r\n  constructor(private mineField: Cell[]) {}\r\n\r\n  isBusted() {\r\n    return this.mineField.some(({ isBusted }) => isBusted);\r\n  }\r\n\r\n  isSolved() {\r\n    return !this.mineField.some(\r\n      ({ isMined, isVisible }) => !(isMined || isVisible)\r\n    );\r\n  }\r\n}\r\n\r\nexport default MineFieldChecker;\r\n","class IndexUtils {\n  constructor(private length: number) {}\n\n  to2D(index: number) {\n    const rowIndex = index % this.length;\n\n    return { rowIndex, columnIndex: (index - rowIndex) / this.length };\n  }\n\n  to1D(rowIndex: number, columnIndex: number) {\n    return columnIndex * this.length + rowIndex;\n  }\n}\n\nexport default IndexUtils;\n","import IndexUtils from './indexUtils';\r\n\r\nconst isValidArrayIndex = (index: number, length: number) =>\r\n  index > -1 && index < length;\r\n\r\nclass NeighborsUtils {\r\n  private indexUtils = new IndexUtils(this.width);\r\n\r\n  constructor(private width: number, private height: number) {}\r\n\r\n  getIndexes({ index }: Cell) {\r\n    const { rowIndex, columnIndex } = this.indexUtils.to2D(index);\r\n    const indexes = [];\r\n\r\n    for (let rowIndexOffset = -1; rowIndexOffset < 2; rowIndexOffset += 1) {\r\n      for (\r\n        let columnIndexOffset = -1;\r\n        columnIndexOffset < 2;\r\n        columnIndexOffset += 1\r\n      ) {\r\n        if (rowIndexOffset || columnIndexOffset) {\r\n          const targetRowIndex = rowIndex + rowIndexOffset;\r\n          const targetColumnIndex = columnIndex + columnIndexOffset;\r\n\r\n          if (\r\n            isValidArrayIndex(targetRowIndex, this.width) &&\r\n            isValidArrayIndex(targetColumnIndex, this.height)\r\n          ) {\r\n            indexes.push(\r\n              this.indexUtils.to1D(targetRowIndex, targetColumnIndex)\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return indexes;\r\n  }\r\n\r\n  canFloodFill(mineField: Cell[], cell: Cell) {\r\n    return !this.getIndexes(cell).some((index) => {\r\n      const { isMined, isFlagged } = mineField[index];\r\n\r\n      return isMined && !isFlagged;\r\n    });\r\n  }\r\n\r\n  canOpen(mineField: Cell[], cell: Cell) {\r\n    return (\r\n      this.countMined(mineField, cell) ===\r\n      this.countBy(mineField, cell, 'isFlagged')\r\n    );\r\n  }\r\n\r\n  countMined(mineField: Cell[], cell: Cell) {\r\n    return this.countBy(mineField, cell, 'isMined');\r\n  }\r\n\r\n  private countBy(mineField: Cell[], cell: Cell, key: keyof Cell) {\r\n    return this.getIndexes(cell).reduce(\r\n      (count, index) => (mineField[index][key] ? count + 1 : count),\r\n      0\r\n    );\r\n  }\r\n}\r\n\r\nexport default NeighborsUtils;\r\n","import { smallMineFieldParams } from 'constants/mineFieldsParams';\r\nimport useDidUpdate from 'hooks/useDidUpdate';\r\nimport produce, { Draft } from 'immer';\r\nimport { difference, range } from 'lodash-es';\r\nimport { useMemo, useState } from 'react';\r\nimport addId from 'utils/addId';\r\nimport MineFieldChecker from 'utils/mineFieldChecker';\r\nimport NeighborsUtils from 'utils/neighborsUtils';\r\n\r\ntype DraftCallback = (draft: Draft<Cell[]>) => void;\r\n\r\nconst useMineField = () => {\r\n  const [mineFieldParams, setMineFieldParams] = useState(smallMineFieldParams);\r\n\r\n  const { width, height, minesCount } = mineFieldParams;\r\n  const length = width * height;\r\n\r\n  const emptyMineField: Cell[] = useMemo(\r\n    () => Array.from({ length }, (item, index) => addId({ index })),\r\n    [length]\r\n  );\r\n\r\n  const [mineField, setMineField] = useState(emptyMineField);\r\n\r\n  const initialMineFieldStatus: MineFieldStatus = {\r\n    hiddenMinesCount: minesCount,\r\n  };\r\n\r\n  const [mineFieldStatus, setMineFieldStatus] = useState(\r\n    initialMineFieldStatus\r\n  );\r\n\r\n  const neighborsUtils = new NeighborsUtils(width, height);\r\n\r\n  const getFloodFilledMineField = (cell: Cell, draftCallback?: DraftCallback) =>\r\n    produce(mineField, (draft) => {\r\n      draftCallback?.(draft);\r\n      /* eslint-disable no-param-reassign */\r\n      draft[cell.index].isVisible = true;\r\n\r\n      (function floodFill(item: Cell) {\r\n        if (neighborsUtils.canFloodFill(draft, item)) {\r\n          neighborsUtils.getIndexes(item).forEach((index) => {\r\n            const neighbor = draft[index];\r\n            const { isMined, isVisible, isFlagged } = neighbor;\r\n\r\n            if (!isMined && !isVisible && !isFlagged) {\r\n              neighbor.isVisible = true;\r\n\r\n              floodFill(neighbor);\r\n            }\r\n          });\r\n        }\r\n      })(cell);\r\n    });\r\n\r\n  const getBustedMineField = (draftCallback: DraftCallback) =>\r\n    produce(mineField, (draft) => {\r\n      draftCallback(draft);\r\n      draft.forEach((item) => {\r\n        const { isMined, isBusted, isFlagged } = item;\r\n\r\n        if (!isMined && isFlagged) {\r\n          item.isWrong = true;\r\n        } else if (isMined && !isBusted && !isFlagged) {\r\n          item.isVisible = true;\r\n        }\r\n      });\r\n    });\r\n\r\n  const setup = (cell: Cell) => {\r\n    setMineField(\r\n      getFloodFilledMineField(cell, (draft) => {\r\n        const restIndexes = difference(range(length), [\r\n          cell.index,\r\n          ...neighborsUtils.getIndexes(cell),\r\n        ]);\r\n        const minedIndexes = new Set<number>();\r\n\r\n        while (minedIndexes.size < minesCount) {\r\n          minedIndexes.add(\r\n            restIndexes[Math.floor(Math.random() * restIndexes.length)]\r\n          );\r\n        }\r\n\r\n        minedIndexes.forEach((index) => {\r\n          draft[index].isMined = true;\r\n        });\r\n\r\n        draft.forEach((item) => {\r\n          if (!item.isMined) {\r\n            item.value = neighborsUtils.countMined(draft, item);\r\n          }\r\n        });\r\n      })\r\n    );\r\n\r\n    setMineFieldStatus((prevMineFieldStatus) => ({\r\n      ...prevMineFieldStatus,\r\n      isSetup: true,\r\n    }));\r\n  };\r\n\r\n  const openCell = (cell: Cell) => {\r\n    const { index, isMined } = cell;\r\n\r\n    setMineField(\r\n      isMined\r\n        ? getBustedMineField((draft) => {\r\n            draft[index].isBusted = true;\r\n          })\r\n        : getFloodFilledMineField(cell)\r\n    );\r\n  };\r\n\r\n  const toggleFlag = ({ index, isFlagged }: Cell) => {\r\n    setMineField((prevMineField) =>\r\n      produce(prevMineField, (draft) => {\r\n        draft[index].isFlagged = !isFlagged;\r\n      })\r\n    );\r\n\r\n    setMineFieldStatus((prevMineFieldStatus) =>\r\n      produce(prevMineFieldStatus, (draft) => {\r\n        draft.hiddenMinesCount += isFlagged ? 1 : -1;\r\n      })\r\n    );\r\n  };\r\n\r\n  const openNeighbors = (cell: Cell) => {\r\n    if (neighborsUtils.canFloodFill(mineField, cell)) {\r\n      setMineField(getFloodFilledMineField(cell));\r\n    } else if (neighborsUtils.canOpen(mineField, cell)) {\r\n      setMineField(\r\n        getBustedMineField((draft) => {\r\n          neighborsUtils.getIndexes(cell).forEach((index) => {\r\n            const neighbor = draft[index];\r\n            const { isMined, isFlagged } = neighbor;\r\n\r\n            if (isMined && !isFlagged) {\r\n              neighbor.isBusted = true;\r\n            } else if (!isMined && !isFlagged) {\r\n              neighbor.isVisible = true;\r\n            }\r\n          });\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setMineField(emptyMineField);\r\n    setMineFieldStatus(initialMineFieldStatus);\r\n  };\r\n\r\n  useDidUpdate(() => {\r\n    reset();\r\n  }, emptyMineField);\r\n\r\n  useDidUpdate(() => {\r\n    const mineFieldChecker = new MineFieldChecker(mineField);\r\n\r\n    if (mineFieldChecker.isBusted()) {\r\n      setMineFieldStatus((prevMineFieldStatus) => ({\r\n        ...prevMineFieldStatus,\r\n        isBusted: true,\r\n      }));\r\n    } else if (mineFieldChecker.isSolved()) {\r\n      setMineField((prevMineField) =>\r\n        produce(prevMineField, (draft) => {\r\n          draft.forEach((cell) => {\r\n            if (cell.isMined) {\r\n              cell.isFlagged = true;\r\n            }\r\n          });\r\n        })\r\n      );\r\n\r\n      setMineFieldStatus((prevMineFieldStatus) => ({\r\n        ...prevMineFieldStatus,\r\n        isSolved: true,\r\n        hiddenMinesCount: 0,\r\n      }));\r\n    }\r\n  }, mineField);\r\n\r\n  return {\r\n    mineField,\r\n    mineFieldParams,\r\n    mineFieldStatus,\r\n    setMineFieldParams,\r\n    setup,\r\n    openCell,\r\n    toggleFlag,\r\n    openNeighbors,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useMineField;\r\n","const formatCount = (count = 0) => {\n  if (count < 1) {\n    return '000';\n  }\n\n  if (count < 10) {\n    return `00${count}`;\n  }\n\n  if (count < 100) {\n    return `0${count}`;\n  }\n\n  return count.toString();\n};\n\nexport default formatCount;\n","import { memo } from 'react';\r\nimport formatCount from 'utils/formatCount';\r\n\r\nconst Counter = ({ count }: { count: number }) => (\r\n  <div>{formatCount(count)}</div>\r\n);\r\n\r\nexport default memo(Counter);\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { memo } from 'react';\r\n\r\nimport styles from './face.module.scss';\r\n\r\ninterface Props {\r\n  frown?: boolean;\r\n  smile?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst Face = ({ frown, smile, onClick }: Props) => {\r\n  let icon = <FontAwesomeIcon icon={['far', 'meh']} />;\r\n\r\n  if (frown) {\r\n    icon = <FontAwesomeIcon icon={['far', 'frown']} />;\r\n  }\r\n\r\n  if (smile) {\r\n    icon = <FontAwesomeIcon icon={['far', 'smile']} />;\r\n  }\r\n\r\n  return (\r\n    <button type=\"button\" className={styles.face} onClick={onClick}>\r\n      {icon}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default memo(Face);\r\n","import { useCallback, useEffect, useRef } from 'react';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst useCallbackRef = <T extends (...args: any[]) => any>(callback: T) => {\n  const callbackRef = useRef<T>();\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return useCallback((...args: any[]) => {\n    callbackRef.current?.(...args);\n  }, []) as T;\n};\n\nexport default useCallbackRef;\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback: () => void, interval?: number | null) => {\n  const callbackRef = useRef<typeof callback>();\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  useEffect(() => {\n    if (!interval) {\n      return undefined;\n    }\n\n    const intervalId = setInterval(() => {\n      callbackRef.current?.();\n    }, interval);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [interval]);\n};\n\nexport default useInterval;\n","import Counter from 'components/Counter';\nimport Face from 'components/Face';\nimport MinesweeperContext from 'contexts/minesweeper';\nimport useCallbackRef from 'hooks/useCallbackRef';\nimport useDidUpdate from 'hooks/useDidUpdate';\nimport useInterval from 'hooks/useInterval';\nimport { useContext, useState } from 'react';\n\nimport styles from './indicators.module.scss';\n\nconst Indicators = () => {\n  const { mineFieldStatus, mineFieldParams, reset } = useContext(\n    MinesweeperContext\n  );\n\n  const { isSetup, isSolved, isBusted, hiddenMinesCount } = mineFieldStatus;\n\n  const [secondsCount, setSecondsCount] = useState(0);\n\n  const handleFaceClick = useCallbackRef(() => {\n    setSecondsCount(0);\n    reset();\n  });\n\n  useInterval(\n    () => {\n      setSecondsCount(secondsCount + 1);\n    },\n    isSetup && !(isSolved || isBusted) ? 1e3 : null\n  );\n\n  useDidUpdate(() => {\n    setSecondsCount(0);\n  }, mineFieldParams);\n\n  return (\n    <div className={styles.indicators}>\n      <Counter count={hiddenMinesCount} />\n      <Face frown={isBusted} smile={isSolved} onClick={handleFaceClick} />\n      <Counter count={secondsCount} />\n    </div>\n  );\n};\n\nexport default Indicators;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport classNames from 'classnames';\r\nimport { memo, SyntheticEvent } from 'react';\r\n\r\nimport styles from './cell.module.scss';\r\n\r\ninterface Props {\r\n  cell: Cell;\r\n  onClick?: (cell: Cell) => void;\r\n  onMouseDown?: (event: SyntheticEvent<HTMLButtonElement>, cell: Cell) => void;\r\n  onContextMenu?: (cell: Cell) => void;\r\n}\r\n\r\nconst Cell = ({ cell, onClick, onMouseDown, onContextMenu }: Props) => {\r\n  const { value, isVisible, isFlagged, isMined, isWrong, isBusted } = cell;\r\n\r\n  const visibleStyles = classNames(styles.cell, styles.visible);\r\n\r\n  const handleClick = () => {\r\n    onClick?.(cell);\r\n  };\r\n\r\n  const handleContextMenu = () => {\r\n    onContextMenu?.(cell);\r\n  };\r\n\r\n  const handleMouseDown = (event: SyntheticEvent<HTMLButtonElement>) => {\r\n    onMouseDown?.(event, cell);\r\n  };\r\n\r\n  if ((isMined && isVisible) || isBusted || isWrong) {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className={classNames(visibleStyles, {\r\n          [styles.busted]: isBusted,\r\n          [styles.wrong]: isWrong,\r\n        })}\r\n      >\r\n        <FontAwesomeIcon icon={['fas', 'bomb']} />\r\n      </button>\r\n    );\r\n  }\r\n\r\n  if (isFlagged) {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className={styles.cell}\r\n        onContextMenu={handleContextMenu}\r\n      >\r\n        <FontAwesomeIcon icon={['far', 'flag']} />\r\n      </button>\r\n    );\r\n  }\r\n\r\n  if (!isVisible) {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"cell\"\r\n        className={styles.cell}\r\n        onClick={handleClick}\r\n        onContextMenu={handleContextMenu}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (!value) {\r\n    return <button type=\"button\" aria-label=\"cell\" className={visibleStyles} />;\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={classNames(visibleStyles, styles[`value_${value}`])}\r\n      onMouseDown={handleMouseDown}\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default memo(Cell);\r\n","import classNames from 'classnames';\nimport Cell from 'components/Cell';\nimport cellStyles from 'components/Cell/cell.module.scss';\nimport MinesweeperContext from 'contexts/minesweeper';\nimport useCallbackRef from 'hooks/useCallbackRef';\nimport { SyntheticEvent, useContext } from 'react';\n\nimport styles from './mineField.module.scss';\n\nconst MineField = () => {\n  const {\n    mineFieldParams: { width = 0 } = {},\n    mineField = [],\n    mineFieldStatus: { isSetup, isBusted, isSolved } = {} as MineFieldStatus,\n    setup,\n    openCell,\n    toggleFlag,\n    openNeighbors,\n  } = useContext(MinesweeperContext);\n\n  const handleContextMenu = (event: SyntheticEvent<HTMLDivElement>) => {\n    event.preventDefault();\n  };\n\n  const handleCellClick = useCallbackRef((cell: Cell) => {\n    (isSetup ? openCell : setup)(cell);\n  });\n\n  const handleCellMouseDown = useCallbackRef(\n    (\n      { target, nativeEvent }: SyntheticEvent<HTMLButtonElement>,\n      cell: Cell\n    ) => {\n      const handleMouseUp = (event: Event) => {\n        if ((nativeEvent as MouseEvent).which !== (event as MouseEvent).which) {\n          openNeighbors(cell);\n        }\n\n        target.removeEventListener('mouseup', handleMouseUp);\n      };\n\n      target.addEventListener('mouseup', handleMouseUp);\n    }\n  );\n\n  const handleCellContextMenu = useCallbackRef(toggleFlag);\n\n  return (\n    <div\n      data-testid={styles.mine_field}\n      className={styles.mine_field}\n      onContextMenu={handleContextMenu}\n    >\n      <div\n        data-testid={styles.row}\n        className={classNames(styles.row, styles[`row_${width}`], {\n          [styles.disabled]: isBusted || isSolved,\n        })}\n        style={{ width: width * Number.parseFloat(cellStyles.cellSize) }}\n      >\n        {mineField.map((cell) => (\n          <Cell\n            cell={cell}\n            onClick={handleCellClick}\n            onMouseDown={handleCellMouseDown}\n            onContextMenu={handleCellContextMenu}\n            key={cell.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MineField;\n","import { memo } from 'react';\n\ninterface Props<T> {\n  item: T;\n  name: string;\n  checked?: boolean;\n  className?: string;\n  onChange?: (item: T) => void;\n}\n\nconst Radio = <T extends { name: string }>({\n  item,\n  name,\n  checked,\n  className,\n  onChange,\n}: Props<T>) => {\n  const handleChange = () => {\n    onChange?.(item);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"radio\"\n        name={name}\n        className={className}\n        defaultChecked={checked}\n        onChange={handleChange}\n      />\n      {item.name}\n    </div>\n  );\n};\n\nexport default memo(Radio) as typeof Radio;\n","import Radio from 'components/Radio';\nimport mineFieldsParams from 'constants/mineFieldsParams';\nimport MinesweeperContext from 'contexts/minesweeper';\nimport useCallbackRef from 'hooks/useCallbackRef';\nimport { useContext } from 'react';\n\nimport styles from './mineFieldParams.module.scss';\n\nconst MineFieldParams = () => {\n  const { mineFieldParams, setMineFieldParams } = useContext(\n    MinesweeperContext\n  );\n\n  const handleMineFieldParamsChange = useCallbackRef(setMineFieldParams);\n\n  return (\n    <form className={styles.mine_field_params}>\n      {mineFieldsParams.map((item) => {\n        const { name, id } = item;\n\n        return (\n          <Radio\n            key={id}\n            item={item}\n            name=\"mine-field-params\"\n            className={styles.radio}\n            checked={name === mineFieldParams.name}\n            onChange={handleMineFieldParamsChange}\n          />\n        );\n      })}\n    </form>\n  );\n};\n\nexport default MineFieldParams;\n","import Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport { MinesweeperProvider } from 'contexts/minesweeper';\nimport useMineField from 'hooks/useMineField';\n\nimport Indicators from '../Indicators';\nimport MineField from '../MineField';\nimport MineFieldParams from '../MineFieldParams';\nimport styles from './minesweeper.module.scss';\n\nconst Minesweeper = () => (\n  <MinesweeperProvider value={useMineField()}>\n    <Header />\n    <main className={styles.minesweeper}>\n      <Indicators />\n      <MineField />\n      <MineFieldParams />\n    </main>\n    <Footer />\n  </MinesweeperProvider>\n);\n\nexport default Minesweeper;\n","import Minesweeper from 'containers/Minesweeper';\n\nconst App = () => <Minesweeper />;\n\nexport default App;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faFlag,\n  faFrown,\n  faMeh,\n  faSmile,\n} from '@fortawesome/free-regular-svg-icons';\nimport { faBomb } from '@fortawesome/free-solid-svg-icons';\n\nconst setupIcons = () => {\n  library.add(faGithub, faBomb, faFlag, faMeh, faFrown, faSmile);\n};\n\nexport default setupIcons;\n","import 'index.scss';\n\nimport App from 'App';\nimport { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport setupIcons from 'setupIcons';\n\nsetupIcons();\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}