{"version":3,"sources":["containers/MineField/mineField.module.scss","components/Radio/radio.module.scss","components/Footer/footer.module.scss","components/Header/header.module.scss","components/Face/face.module.scss","containers/Indicators/indicators.module.scss","containers/Settings/settings.module.scss","containers/Minesweeper/minesweeper.module.scss","components/Cell/cell.module.scss","components/Footer/index.tsx","components/Header/index.tsx","utils/addId.ts","constants/allSettings.ts","hooks/useDidUpdate.ts","utils/indexUtils.ts","utils/neighborsUtils.ts","hooks/useRefCallback.ts","hooks/useMinesweeper.ts","utils/formatCount.ts","components/Counter/index.tsx","components/Face/index.tsx","hooks/useInterval.ts","containers/Indicators/index.tsx","components/Cell/index.tsx","containers/MineField/index.tsx","components/Radio/index.tsx","containers/Settings/index.tsx","containers/Minesweeper/index.tsx","setupIcons.ts","index.tsx"],"names":["module","exports","Footer","className","styles","footer","link","href","target","rel","icon","Date","getFullYear","Header","header","addId","item","id","nanoid","easySettings","label","width","height","minesCount","allSettings","useDidUpdate","callback","didMount","useRef","deps","useEffect","current","IndexUtils","length","index","rowIndex","this","columnIndex","isValidArrayIndex","NeighborsUtils","indexUtils","to2D","indexes","rowIndexOffset","columnIndexOffset","targetRowIndex","targetColumnIndex","push","to1D","mineField","cell","getIndexes","some","isMined","isFlagged","countMined","countBy","key","reduce","count","useRefCallback","callbackRef","useCallback","args","call","useMinesweeper","useState","settings","setSettings","emptyCells","useMemo","Array","from","cells","setCells","initialStatus","hiddenMinesCount","status","setStatus","neighborsUtils","getFloodFilledCells","produce","draft","isVisible","floodFill","canFloodFill","forEach","neighbor","getBustedCells","isBusted","isWrong","toggleCellFlag","resetCells","isSolved","setupCells","restIndexes","difference","range","minedIndexes","Set","size","add","Math","floor","random","value","isSetup","openCell","openCellNeighbors","canOpen","formatCount","slice","Counter","memo","Face","frown","smile","onClick","type","face","useInterval","interval","intervalId","setInterval","clearInterval","Indicators","onFaceClick","secondsCount","setSecondsCount","handleFaceClick","indicators","Cell","onMouseDown","onContextMenu","visibleStyles","classNames","visible","handleContextMenu","busted","wrong","event","MineField","onCellsSetup","onCellOpen","onCellNeighborsOpen","onCellFlagToggle","row","disabled","style","Number","parseFloat","cellStyles","cellSize","handleCellClick","handleCellMouseDown","nativeEvent","addEventListener","handleMouseUp","which","removeEventListener","mine_field","preventDefault","map","Radio","name","checked","onChange","radio","input","defaultChecked","Settings","currentSettings","onSettingsChange","handleSettingsChange","Minesweeper","minesweeper","library","faGithub","faBomb","faFlag","faMeh","faFrown","faSmile","setupIcons","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfcf7926.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mine_field\":\"mineField_mine_field__2Fl0L\",\"row\":\"mineField_row__35wCK\",\"disabled\":\"mineField_disabled__deIQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"radio_radio__WGkBE\",\"input\":\"radio_input__3VDJr\",\"label\":\"radio_label__35OQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__3SziO\",\"link\":\"footer_link__2dFa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2yLQj\",\"link\":\"header_link__3R6BL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"face\":\"face_face__1V5r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indicators\":\"indicators_indicators__xiJJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"settings_settings__1jkf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minesweeper\":\"minesweeper_minesweeper__24ziS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellSize\":\"28px\",\"cell\":\"cell_cell__14Twb\",\"visible\":\"cell_visible__Ladne\",\"busted\":\"cell_busted__3Eypx\",\"wrong\":\"cell_wrong__VEfOs\",\"value_1\":\"cell_value_1__23PsV\",\"value_2\":\"cell_value_2__1Q9Ag\",\"value_3\":\"cell_value_3__1_bSN\",\"value_4\":\"cell_value_4__Tvv7G\",\"value_5\":\"cell_value_5__pfAPd\",\"value_6\":\"cell_value_6__19hZL\",\"value_7\":\"cell_value_7__1IqTn\",\"value_8\":\"cell_value_8__2-ysP\"};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './footer.module.scss';\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <span>\n      Powered by\n      <a\n        className={styles.link}\n        href=\"https://github.com/FakeMetalFan\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FontAwesomeIcon icon={['fab', 'github']} />\n      </a>\n      &copy;\n      <span>{new Date().getFullYear()}</span>\n    </span>\n  </footer>\n);\n\nexport default Footer;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport styles from './header.module.scss';\n\nconst Header = () => (\n  <header className={styles.header}>\n    Minesweeper\n    <a\n      className={styles.link}\n      href=\"https://github.com/FakeMetalFan/minesweeper\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <FontAwesomeIcon icon={['fab', 'github']} />\n    </a>\n  </header>\n);\n\nexport default Header;\n","import { nanoid } from 'nanoid';\n\nconst addId = <T extends Record<string, unknown>>(item: T) => ({\n  ...item,\n  id: nanoid(),\n});\n\nexport default addId;\n","import addId from 'utils/addId';\n\nexport const easySettings = addId({\n  label: 'Easy',\n  width: 9,\n  height: 9,\n  minesCount: 10,\n});\n\nconst allSettings = [\n  easySettings,\n  addId({\n    label: 'Medium',\n    width: 16,\n    height: 16,\n    minesCount: 40,\n  }),\n  addId({\n    label: 'Hard',\n    width: 30,\n    height: 16,\n    minesCount: 99,\n  }),\n];\n\nexport default allSettings;\n","import { useEffect, useRef } from 'react';\n\nconst useDidUpdate = (callback: () => void, ...deps: unknown[]) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) {\n      callback();\n    } else {\n      didMount.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useDidUpdate;\n","class IndexUtils {\n  constructor(private length: number) {}\n\n  to2D(index: number) {\n    const rowIndex = index % this.length;\n\n    return { rowIndex, columnIndex: (index - rowIndex) / this.length };\n  }\n\n  to1D(rowIndex: number, columnIndex: number) {\n    return columnIndex * this.length + rowIndex;\n  }\n}\n\nexport default IndexUtils;\n","import IndexUtils from './indexUtils';\n\nconst isValidArrayIndex = (index: number, length: number) =>\n  index > -1 && index < length;\n\nclass NeighborsUtils {\n  private indexUtils = new IndexUtils(this.width);\n\n  constructor(private width: number, private height: number) {}\n\n  getIndexes({ index }: CellVM) {\n    const { rowIndex, columnIndex } = this.indexUtils.to2D(index);\n    const indexes = [];\n\n    for (let rowIndexOffset = -1; rowIndexOffset < 2; rowIndexOffset += 1) {\n      for (\n        let columnIndexOffset = -1;\n        columnIndexOffset < 2;\n        columnIndexOffset += 1\n      ) {\n        if (rowIndexOffset || columnIndexOffset) {\n          const targetRowIndex = rowIndex + rowIndexOffset;\n          const targetColumnIndex = columnIndex + columnIndexOffset;\n\n          if (\n            isValidArrayIndex(targetRowIndex, this.width) &&\n            isValidArrayIndex(targetColumnIndex, this.height)\n          ) {\n            indexes.push(\n              this.indexUtils.to1D(targetRowIndex, targetColumnIndex)\n            );\n          }\n        }\n      }\n    }\n\n    return indexes;\n  }\n\n  canFloodFill(mineField: CellVM[], cell: CellVM) {\n    return !this.getIndexes(cell).some((index) => {\n      const { isMined, isFlagged } = mineField[index];\n\n      return isMined && !isFlagged;\n    });\n  }\n\n  canOpen(mineField: CellVM[], cell: CellVM) {\n    return (\n      this.countMined(mineField, cell) ===\n      this.countBy(mineField, cell, 'isFlagged')\n    );\n  }\n\n  countMined(mineField: CellVM[], cell: CellVM) {\n    return this.countBy(mineField, cell, 'isMined');\n  }\n\n  private countBy(mineField: CellVM[], cell: CellVM, key: keyof CellVM) {\n    return this.getIndexes(cell).reduce(\n      (count, index) => (mineField[index][key] ? count + 1 : count),\n      0\n    );\n  }\n}\n\nexport default NeighborsUtils;\n","import { useCallback, useEffect, useRef } from 'react';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst useRefCallback = <T extends (...args: any[]) => any>(callback: T) => {\n  const callbackRef = useRef<T>();\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return useCallback((...args: any[]) => {\n    callbackRef.current?.(...args);\n  }, []) as T;\n};\n\nexport default useRefCallback;\n","import { easySettings } from 'constants/allSettings';\nimport useDidUpdate from 'hooks/useDidUpdate';\nimport produce, { Draft } from 'immer';\nimport { difference, range } from 'lodash-es';\nimport { useMemo, useState } from 'react';\nimport addId from 'utils/addId';\nimport NeighborsUtils from 'utils/neighborsUtils';\n\nimport useRefCallback from './useRefCallback';\n\ntype DraftCallback = (draft: Draft<CellVM[]>) => void;\n\nconst useMinesweeper = () => {\n  const [settings, setSettings] = useState(easySettings);\n\n  const { width, height, minesCount } = settings;\n  const length = width * height;\n\n  const emptyCells: CellVM[] = useMemo(\n    () => Array.from({ length }, (item, index) => addId({ index })),\n    [length]\n  );\n\n  const [cells, setCells] = useState(emptyCells);\n\n  const initialStatus: Status = { hiddenMinesCount: minesCount };\n\n  const [status, setStatus] = useState(initialStatus);\n\n  const neighborsUtils = new NeighborsUtils(width, height);\n\n  const getFloodFilledCells = (cell: CellVM, callback?: DraftCallback) =>\n    produce(cells, (draft) => {\n      callback?.(draft);\n      /* eslint-disable no-param-reassign */\n      draft[cell.index].isVisible = true;\n\n      (function floodFill(item: CellVM) {\n        if (neighborsUtils.canFloodFill(draft, item)) {\n          neighborsUtils.getIndexes(item).forEach((index) => {\n            const neighbor = draft[index];\n            const { isMined, isVisible, isFlagged } = neighbor;\n\n            if (!isMined && !isVisible && !isFlagged) {\n              neighbor.isVisible = true;\n\n              floodFill(neighbor);\n            }\n          });\n        }\n      })(cell);\n    });\n\n  const getBustedCells = (callback: DraftCallback) =>\n    produce(cells, (draft) => {\n      callback(draft);\n      draft.forEach((item) => {\n        const { isMined, isBusted, isFlagged } = item;\n\n        if (!isMined && isFlagged) {\n          item.isWrong = true;\n        } else if (isMined && !isBusted && !isFlagged) {\n          item.isVisible = true;\n        }\n      });\n    });\n\n  const setupCells = (cell: CellVM) => {\n    setCells(\n      getFloodFilledCells(cell, (draft) => {\n        const restIndexes = difference(range(length), [\n          cell.index,\n          ...neighborsUtils.getIndexes(cell),\n        ]);\n        const minedIndexes = new Set<number>();\n\n        while (minedIndexes.size < minesCount) {\n          minedIndexes.add(\n            restIndexes[Math.floor(Math.random() * restIndexes.length)]\n          );\n        }\n\n        minedIndexes.forEach((index) => {\n          draft[index].isMined = true;\n        });\n        draft.forEach((item) => {\n          if (!item.isMined) {\n            item.value = neighborsUtils.countMined(draft, item);\n          }\n        });\n      })\n    );\n    setStatus({ ...status, isSetup: true });\n  };\n\n  const openCell = (cell: CellVM) => {\n    const { index, isMined } = cell;\n\n    setCells(\n      isMined\n        ? getBustedCells((draft) => {\n            draft[index].isBusted = true;\n          })\n        : getFloodFilledCells(cell)\n    );\n  };\n\n  const toggleCellFlag = useRefCallback(({ index, isFlagged }: CellVM) => {\n    setCells(\n      produce(cells, (draft) => {\n        draft[index].isFlagged = !isFlagged;\n      })\n    );\n    setStatus(\n      produce(status, (draft) => {\n        draft.hiddenMinesCount += isFlagged ? 1 : -1;\n      })\n    );\n  });\n\n  const openCellNeighbors = (cell: CellVM) => {\n    if (neighborsUtils.canFloodFill(cells, cell)) {\n      setCells(getFloodFilledCells(cell));\n    } else if (neighborsUtils.canOpen(cells, cell)) {\n      setCells(\n        getBustedCells((draft) => {\n          neighborsUtils.getIndexes(cell).forEach((index) => {\n            const neighbor = draft[index];\n            const { isMined, isFlagged } = neighbor;\n\n            if (isMined && !isFlagged) {\n              neighbor.isBusted = true;\n            } else if (!isMined && !isFlagged) {\n              neighbor.isVisible = true;\n            }\n          });\n        })\n      );\n    }\n  };\n\n  const resetCells = () => {\n    setCells(emptyCells);\n    setStatus(initialStatus);\n  };\n\n  useDidUpdate(resetCells, emptyCells);\n\n  useDidUpdate(() => {\n    if (cells.some(({ isBusted }) => isBusted)) {\n      setStatus({ ...status, isBusted: true });\n    } else if (\n      !cells.some(({ isMined, isVisible }) => !(isMined || isVisible))\n    ) {\n      setCells(\n        produce(cells, (draft) => {\n          draft.forEach((cell) => {\n            if (cell.isMined) {\n              cell.isFlagged = true;\n            }\n          });\n        })\n      );\n      setStatus({\n        ...status,\n        isSolved: true,\n        hiddenMinesCount: 0,\n      });\n    }\n  }, cells);\n\n  return {\n    cells,\n    settings,\n    status,\n    setSettings,\n    setupCells,\n    openCell,\n    toggleCellFlag,\n    openCellNeighbors,\n    resetCells,\n  };\n};\n\nexport default useMinesweeper;\n","const formatCount = (count = 0) => `000${count}`.slice(-3);\n\nexport default formatCount;\n","import { memo } from 'react';\nimport formatCount from 'utils/formatCount';\n\ninterface Props {\n  count: number;\n}\n\nconst Counter = ({ count }: Props) => <div>{formatCount(count)}</div>;\n\nexport default memo(Counter);\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { memo } from 'react';\n\nimport styles from './face.module.scss';\n\ninterface Props {\n  frown?: boolean;\n  smile?: boolean;\n  onClick?: () => void;\n}\n\nconst Face = ({ frown, smile, onClick }: Props) => {\n  let icon = <FontAwesomeIcon icon={['far', 'meh']} />;\n\n  if (frown) {\n    icon = <FontAwesomeIcon icon={['far', 'frown']} />;\n  }\n\n  if (smile) {\n    icon = <FontAwesomeIcon icon={['far', 'smile']} />;\n  }\n\n  return (\n    <button type=\"button\" className={styles.face} onClick={onClick}>\n      {icon}\n    </button>\n  );\n};\n\nexport default memo(Face);\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (\n  callback: () => void,\n  interval?: number | null | false\n) => {\n  const callbackRef = useRef<typeof callback>();\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    if (interval) {\n      const intervalId = setInterval(() => {\n        callbackRef.current?.();\n      }, interval);\n\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [interval]);\n};\n\nexport default useInterval;\n","import Counter from 'components/Counter';\nimport Face from 'components/Face';\nimport useDidUpdate from 'hooks/useDidUpdate';\nimport useInterval from 'hooks/useInterval';\nimport useRefCallback from 'hooks/useRefCallback';\nimport { useState } from 'react';\n\nimport styles from './indicators.module.scss';\n\ninterface Props {\n  status: Status;\n  settings: Settings;\n  onFaceClick: () => void;\n}\n\nconst Indicators = ({ status, settings, onFaceClick }: Props) => {\n  const { isSetup, isSolved, isBusted, hiddenMinesCount } = status;\n\n  const [secondsCount, setSecondsCount] = useState(0);\n\n  const handleFaceClick = useRefCallback(() => {\n    setSecondsCount(0);\n    onFaceClick();\n  });\n\n  useInterval(\n    () => {\n      setSecondsCount(secondsCount + 1);\n    },\n    isSetup && !(isSolved || isBusted) ? 1e3 : 0\n  );\n\n  useDidUpdate(() => {\n    setSecondsCount(0);\n  }, settings);\n\n  return (\n    <div className={styles.indicators}>\n      <Counter count={hiddenMinesCount} />\n      <Face frown={isBusted} smile={isSolved} onClick={handleFaceClick} />\n      <Counter count={secondsCount} />\n    </div>\n  );\n};\n\nexport default Indicators;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { memo, SyntheticEvent } from 'react';\n\nimport styles from './cell.module.scss';\n\ninterface Props {\n  cell: CellVM;\n  onClick?: (cell: CellVM) => void;\n  onMouseDown?: (\n    event: SyntheticEvent<HTMLButtonElement>,\n    cell: CellVM\n  ) => void;\n  onContextMenu?: (cell: CellVM) => void;\n}\n\nconst Cell = ({ cell, onClick, onMouseDown, onContextMenu }: Props) => {\n  const { value, isVisible, isFlagged, isMined, isWrong, isBusted } = cell;\n\n  const visibleStyles = classNames(styles.cell, styles.visible);\n\n  const handleClick = () => {\n    onClick?.(cell);\n  };\n\n  const handleContextMenu = () => {\n    onContextMenu?.(cell);\n  };\n\n  const handleMouseDown = (event: SyntheticEvent<HTMLButtonElement>) => {\n    onMouseDown?.(event, cell);\n  };\n\n  if ((isMined && isVisible) || isBusted || isWrong) {\n    return (\n      <button\n        type=\"button\"\n        className={classNames(visibleStyles, {\n          [styles.busted]: isBusted,\n          [styles.wrong]: isWrong,\n        })}\n      >\n        <FontAwesomeIcon icon={['fas', 'bomb']} />\n      </button>\n    );\n  }\n\n  if (isFlagged) {\n    return (\n      <button\n        type=\"button\"\n        className={styles.cell}\n        onContextMenu={handleContextMenu}\n      >\n        <FontAwesomeIcon icon={['far', 'flag']} />\n      </button>\n    );\n  }\n\n  if (!isVisible) {\n    return (\n      <button\n        type=\"button\"\n        aria-label=\"cell\"\n        className={styles.cell}\n        onClick={handleClick}\n        onContextMenu={handleContextMenu}\n      />\n    );\n  }\n\n  if (!value) {\n    return <button type=\"button\" aria-label=\"cell\" className={visibleStyles} />;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(visibleStyles, styles[`value_${value}`])}\n      onMouseDown={handleMouseDown}\n    >\n      {value}\n    </button>\n  );\n};\n\nexport default memo(Cell);\n","import classNames from 'classnames';\nimport Cell from 'components/Cell';\nimport cellStyles from 'components/Cell/cell.module.scss';\nimport useRefCallback from 'hooks/useRefCallback';\nimport { SyntheticEvent } from 'react';\n\nimport styles from './mineField.module.scss';\n\ninterface Props {\n  status: Status;\n  settings: Settings;\n  cells: CellVM[];\n  onCellsSetup: (cell: CellVM) => void;\n  onCellOpen: (cell: CellVM) => void;\n  onCellNeighborsOpen: (cell: CellVM) => void;\n  onCellFlagToggle: (cell: CellVM) => void;\n}\n\nconst MineField = ({\n  status,\n  settings,\n  cells,\n  onCellsSetup,\n  onCellOpen,\n  onCellNeighborsOpen,\n  onCellFlagToggle,\n}: Props) => {\n  const { isSetup, isSolved, isBusted } = status;\n  const { width } = settings;\n  const className = classNames(styles.row, styles[`row_${width}`], {\n    [styles.disabled]: isSolved || isBusted,\n  });\n  const style = { width: width * Number.parseFloat(cellStyles.cellSize) };\n\n  const handleContextMenu = (event: SyntheticEvent<HTMLDivElement>) => {\n    event.preventDefault();\n  };\n\n  const handleCellClick = useRefCallback((cell: CellVM) => {\n    (isSetup ? onCellOpen : onCellsSetup)(cell);\n  });\n\n  const handleCellMouseDown = useRefCallback(\n    (\n      { target, nativeEvent }: SyntheticEvent<HTMLButtonElement>,\n      cell: CellVM\n    ) => {\n      const handleMouseUp = (event: Event) => {\n        if ((nativeEvent as MouseEvent).which !== (event as MouseEvent).which) {\n          onCellNeighborsOpen(cell);\n        }\n\n        target.removeEventListener('mouseup', handleMouseUp);\n      };\n\n      target.addEventListener('mouseup', handleMouseUp);\n    }\n  );\n\n  const mapCellsToViews = () =>\n    cells.map((cell) => (\n      <Cell\n        cell={cell}\n        key={cell.id}\n        onClick={handleCellClick}\n        onMouseDown={handleCellMouseDown}\n        onContextMenu={onCellFlagToggle}\n      />\n    ));\n\n  return (\n    <div\n      data-testid={styles.mine_field}\n      className={styles.mine_field}\n      onContextMenu={handleContextMenu}\n    >\n      <div data-testid={styles.row} className={className} style={style}>\n        {mapCellsToViews()}\n      </div>\n    </div>\n  );\n};\n\nexport default MineField;\n","import styles from './radio.module.scss';\n\ninterface Props {\n  name: string;\n  label: string;\n  checked?: boolean;\n  onChange?: () => void;\n}\n\nconst Radio = ({ name, label, checked, onChange }: Props) => (\n  <div className={styles.radio}>\n    <input\n      type=\"radio\"\n      name={name}\n      className={styles.input}\n      defaultChecked={checked}\n      onChange={onChange}\n    />\n    <span className={styles.label}>{label}</span>\n  </div>\n);\n\nexport default Radio;\n","import Radio from 'components/Radio';\nimport allSettings from 'constants/allSettings';\nimport { memo } from 'react';\n\nimport styles from './settings.module.scss';\n\ninterface Props {\n  currentSettings: Settings;\n  onSettingsChange: (settings: Settings) => void;\n}\n\nconst Settings = ({ currentSettings, onSettingsChange }: Props) => {\n  const handleSettingsChange = (settings: Settings) => () => {\n    onSettingsChange(settings);\n  };\n\n  const mapSettingsToViews = () =>\n    allSettings.map((settings) => {\n      const { id, label } = settings;\n\n      return (\n        <Radio\n          name=\"settings\"\n          label={label}\n          key={id}\n          checked={label === currentSettings.label}\n          onChange={handleSettingsChange(settings)}\n        />\n      );\n    });\n\n  return <form className={styles.settings}>{mapSettingsToViews()}</form>;\n};\n\nexport default memo(Settings);\n","import useMinesweeper from 'hooks/useMinesweeper';\n\nimport Indicators from '../Indicators';\nimport MineField from '../MineField';\nimport Settings from '../Settings';\nimport styles from './minesweeper.module.scss';\n\nconst Minesweeper = () => {\n  const {\n    status,\n    settings,\n    cells,\n    resetCells,\n    setupCells,\n    openCell,\n    openCellNeighbors,\n    toggleCellFlag,\n    setSettings,\n  } = useMinesweeper();\n\n  return (\n    <main className={styles.minesweeper}>\n      <Indicators\n        status={status}\n        settings={settings}\n        onFaceClick={resetCells}\n      />\n      <MineField\n        status={status}\n        settings={settings}\n        cells={cells}\n        onCellsSetup={setupCells}\n        onCellOpen={openCell}\n        onCellNeighborsOpen={openCellNeighbors}\n        onCellFlagToggle={toggleCellFlag}\n      />\n      <Settings currentSettings={settings} onSettingsChange={setSettings} />\n    </main>\n  );\n};\n\nexport default Minesweeper;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faFlag,\n  faFrown,\n  faMeh,\n  faSmile,\n} from '@fortawesome/free-regular-svg-icons';\nimport { faBomb } from '@fortawesome/free-solid-svg-icons';\n\nconst setupIcons = () => {\n  library.add(faGithub, faBomb, faFlag, faMeh, faFrown, faSmile);\n};\n\nexport default setupIcons;\n","import 'index.scss';\n\nimport Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport Minesweeper from 'containers/Minesweeper';\nimport { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport setupIcons from 'setupIcons';\n\nsetupIcons();\n\nrender(\n  <StrictMode>\n    <Header />\n    <Minesweeper />\n    <Footer />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}