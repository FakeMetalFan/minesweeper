{"version":3,"sources":["containers/MineField/mineField.module.scss","components/Radio/radio.module.scss","components/Footer/footer.module.scss","components/Header/header.module.scss","components/Face/face.module.scss","containers/Indicators/indicators.module.scss","containers/MineFieldParams/mineFieldParams.module.scss","containers/Minesweeper/minesweeper.module.scss","components/Cell/cell.module.scss","components/Footer/index.tsx","components/Header/index.tsx","contexts/minesweeper.ts","utils/addId.ts","constants/mineFieldsParams.ts","hooks/useDidUpdate.ts","utils/indexUtils.ts","utils/neighborsUtils.ts","hooks/useRefCallback.ts","hooks/useMineField.ts","utils/formatCount.ts","components/Counter/index.tsx","components/Face/index.tsx","hooks/useInterval.ts","containers/Indicators/index.tsx","components/Cell/index.tsx","containers/MineField/index.tsx","components/Radio/index.tsx","containers/MineFieldParams/index.tsx","containers/Minesweeper/index.tsx","setupIcons.ts","index.tsx"],"names":["module","exports","Footer","className","styles","footer","link","href","target","rel","icon","Date","getFullYear","memo","Header","header","MinesweeperContext","createContext","MinesweeperProvider","Provider","addId","item","id","nanoid","easyMineFieldParams","label","width","height","minesCount","mineFieldsParams","useDidUpdate","callback","didMount","useRef","deps","useEffect","current","IndexUtils","length","index","rowIndex","this","columnIndex","isValidArrayIndex","NeighborsUtils","indexUtils","to2D","indexes","rowIndexOffset","columnIndexOffset","targetRowIndex","targetColumnIndex","push","to1D","mineField","cell","getIndexes","some","isMined","isFlagged","countMined","countBy","key","reduce","count","useRefCallback","callbackRef","useCallback","args","call","useMineField","useState","mineFieldParams","setMineFieldParams","emptyMineField","useMemo","Array","from","setMineField","initialMineFieldStatus","hiddenMinesCount","mineFieldStatus","setMineFieldStatus","neighborsUtils","getFloodFilledMineField","draftCallback","produce","draft","isVisible","floodFill","canFloodFill","forEach","neighbor","getBustedMineField","isBusted","isWrong","toggleFlag","reset","isSolved","setup","restIndexes","difference","range","minedIndexes","Set","size","add","Math","floor","random","value","isSetup","openCell","openNeighbors","canOpen","formatCount","slice","Counter","Face","frown","smile","onClick","type","face","useInterval","interval","intervalId","setInterval","clearInterval","Indicators","useContext","secondsCount","setSecondsCount","handleFaceClick","indicators","Cell","onMouseDown","onContextMenu","visibleStyles","classNames","visible","handleContextMenu","busted","wrong","event","aria-label","MineField","handleCellClick","handleCellMouseDown","nativeEvent","addEventListener","handleMouseUp","which","removeEventListener","data-testid","mine_field","preventDefault","row","disabled","style","Number","parseFloat","cellStyles","cellSize","map","Radio","name","checked","onChange","radio","input","defaultChecked","MineFieldParams","handleMineFieldParamsChange","params","mine_field_params","Minesweeper","minesweeper","library","faGithub","faBomb","faFlag","faMeh","faFrown","faSmile","setupIcons","render","document","getElementById"],"mappings":"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","file":"static/js/main.64bda6b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mine_field\":\"mineField_mine_field__2Fl0L\",\"row\":\"mineField_row__35wCK\",\"disabled\":\"mineField_disabled__deIQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"radio_radio__WGkBE\",\"input\":\"radio_input__3VDJr\",\"label\":\"radio_label__35OQj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__3SziO\",\"link\":\"footer_link__2dFa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2yLQj\",\"link\":\"header_link__3R6BL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"face\":\"face_face__1V5r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indicators\":\"indicators_indicators__xiJJ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mine_field_params\":\"mineFieldParams_mine_field_params__1t4La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"minesweeper\":\"minesweeper_minesweeper__24ziS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellSize\":\"28px\",\"cell\":\"cell_cell__14Twb\",\"visible\":\"cell_visible__Ladne\",\"busted\":\"cell_busted__3Eypx\",\"wrong\":\"cell_wrong__VEfOs\",\"value_1\":\"cell_value_1__23PsV\",\"value_2\":\"cell_value_2__1Q9Ag\",\"value_3\":\"cell_value_3__1_bSN\",\"value_4\":\"cell_value_4__Tvv7G\",\"value_5\":\"cell_value_5__pfAPd\",\"value_6\":\"cell_value_6__19hZL\",\"value_7\":\"cell_value_7__1IqTn\",\"value_8\":\"cell_value_8__2-ysP\"};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { memo } from 'react';\n\nimport styles from './footer.module.scss';\n\nconst Footer = () => (\n  <footer className={styles.footer}>\n    <span>\n      Powered by\n      <a\n        className={styles.link}\n        href=\"https://github.com/FakeMetalFan\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FontAwesomeIcon icon={['fab', 'github']} />\n      </a>\n      &copy;\n      <span>{new Date().getFullYear()}</span>\n    </span>\n  </footer>\n);\n\nexport default memo(Footer);\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { memo } from 'react';\n\nimport styles from './header.module.scss';\n\nconst Header = () => (\n  <header className={styles.header}>\n    Minesweeper\n    <a\n      className={styles.link}\n      href=\"https://github.com/FakeMetalFan/minesweeper\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <FontAwesomeIcon icon={['fab', 'github']} />\n    </a>\n  </header>\n);\n\nexport default memo(Header);\n","import useMineField from 'hooks/useMineField';\nimport { createContext } from 'react';\n\nconst MinesweeperContext = createContext({} as ReturnType<typeof useMineField>);\n\nexport const { Provider: MinesweeperProvider } = MinesweeperContext;\n\nexport default MinesweeperContext;\n","import { nanoid } from 'nanoid';\n\nconst addId = <T extends Record<string, unknown>>(item: T) => ({\n  ...item,\n  id: nanoid(),\n});\n\nexport default addId;\n","import addId from 'utils/addId';\n\nexport const easyMineFieldParams = addId({\n  label: 'Easy',\n  width: 9,\n  height: 9,\n  minesCount: 10,\n});\n\nconst mineFieldsParams = [\n  easyMineFieldParams,\n  addId({\n    label: 'Medium',\n    width: 16,\n    height: 16,\n    minesCount: 40,\n  }),\n  addId({\n    label: 'Hard',\n    width: 30,\n    height: 16,\n    minesCount: 99,\n  }),\n];\n\nexport default mineFieldsParams;\n","import { useEffect, useRef } from 'react';\n\nconst useDidUpdate = (callback: () => void, ...deps: unknown[]) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) {\n      callback();\n    } else {\n      didMount.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n};\n\nexport default useDidUpdate;\n","class IndexUtils {\n  constructor(private length: number) {}\n\n  to2D(index: number) {\n    const rowIndex = index % this.length;\n\n    return { rowIndex, columnIndex: (index - rowIndex) / this.length };\n  }\n\n  to1D(rowIndex: number, columnIndex: number) {\n    return columnIndex * this.length + rowIndex;\n  }\n}\n\nexport default IndexUtils;\n","import IndexUtils from './indexUtils';\n\nconst isValidArrayIndex = (index: number, length: number) =>\n  index > -1 && index < length;\n\nclass NeighborsUtils {\n  private indexUtils = new IndexUtils(this.width);\n\n  constructor(private width: number, private height: number) {}\n\n  getIndexes({ index }: Cell) {\n    const { rowIndex, columnIndex } = this.indexUtils.to2D(index);\n    const indexes = [];\n\n    for (let rowIndexOffset = -1; rowIndexOffset < 2; rowIndexOffset += 1) {\n      for (\n        let columnIndexOffset = -1;\n        columnIndexOffset < 2;\n        columnIndexOffset += 1\n      ) {\n        if (rowIndexOffset || columnIndexOffset) {\n          const targetRowIndex = rowIndex + rowIndexOffset;\n          const targetColumnIndex = columnIndex + columnIndexOffset;\n\n          if (\n            isValidArrayIndex(targetRowIndex, this.width) &&\n            isValidArrayIndex(targetColumnIndex, this.height)\n          ) {\n            indexes.push(\n              this.indexUtils.to1D(targetRowIndex, targetColumnIndex)\n            );\n          }\n        }\n      }\n    }\n\n    return indexes;\n  }\n\n  canFloodFill(mineField: Cell[], cell: Cell) {\n    return !this.getIndexes(cell).some((index) => {\n      const { isMined, isFlagged } = mineField[index];\n\n      return isMined && !isFlagged;\n    });\n  }\n\n  canOpen(mineField: Cell[], cell: Cell) {\n    return (\n      this.countMined(mineField, cell) ===\n      this.countBy(mineField, cell, 'isFlagged')\n    );\n  }\n\n  countMined(mineField: Cell[], cell: Cell) {\n    return this.countBy(mineField, cell, 'isMined');\n  }\n\n  private countBy(mineField: Cell[], cell: Cell, key: keyof Cell) {\n    return this.getIndexes(cell).reduce(\n      (count, index) => (mineField[index][key] ? count + 1 : count),\n      0\n    );\n  }\n}\n\nexport default NeighborsUtils;\n","import { useCallback, useEffect, useRef } from 'react';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst useRefCallback = <T extends (...args: any[]) => any>(callback: T) => {\n  const callbackRef = useRef<T>();\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return useCallback((...args: any[]) => {\n    callbackRef.current?.(...args);\n  }, []) as T;\n};\n\nexport default useRefCallback;\n","import { easyMineFieldParams } from 'constants/mineFieldsParams';\nimport useDidUpdate from 'hooks/useDidUpdate';\nimport produce, { Draft } from 'immer';\nimport { difference, range } from 'lodash-es';\nimport { useMemo, useState } from 'react';\nimport addId from 'utils/addId';\nimport NeighborsUtils from 'utils/neighborsUtils';\n\nimport useRefCallback from './useRefCallback';\n\ntype DraftCallback = (draft: Draft<Cell[]>) => void;\n\nconst useMineField = () => {\n  const [mineFieldParams, setMineFieldParams] = useState(easyMineFieldParams);\n\n  const { width, height, minesCount } = mineFieldParams;\n  const length = width * height;\n\n  const emptyMineField: Cell[] = useMemo(\n    () => Array.from({ length }, (item, index) => addId({ index })),\n    [length]\n  );\n\n  const [mineField, setMineField] = useState(emptyMineField);\n\n  const initialMineFieldStatus: MineFieldStatus = {\n    hiddenMinesCount: minesCount,\n  };\n\n  const [mineFieldStatus, setMineFieldStatus] = useState(\n    initialMineFieldStatus\n  );\n\n  const neighborsUtils = new NeighborsUtils(width, height);\n\n  const getFloodFilledMineField = (cell: Cell, draftCallback?: DraftCallback) =>\n    produce(mineField, (draft) => {\n      draftCallback?.(draft);\n      /* eslint-disable no-param-reassign */\n      draft[cell.index].isVisible = true;\n\n      (function floodFill(item: Cell) {\n        if (neighborsUtils.canFloodFill(draft, item)) {\n          neighborsUtils.getIndexes(item).forEach((index) => {\n            const neighbor = draft[index];\n            const { isMined, isVisible, isFlagged } = neighbor;\n\n            if (!isMined && !isVisible && !isFlagged) {\n              neighbor.isVisible = true;\n\n              floodFill(neighbor);\n            }\n          });\n        }\n      })(cell);\n    });\n\n  const getBustedMineField = (draftCallback: DraftCallback) =>\n    produce(mineField, (draft) => {\n      draftCallback(draft);\n      draft.forEach((item) => {\n        const { isMined, isBusted, isFlagged } = item;\n\n        if (!isMined && isFlagged) {\n          item.isWrong = true;\n        } else if (isMined && !isBusted && !isFlagged) {\n          item.isVisible = true;\n        }\n      });\n    });\n\n  const setup = (cell: Cell) => {\n    setMineField(\n      getFloodFilledMineField(cell, (draft) => {\n        const restIndexes = difference(range(length), [\n          cell.index,\n          ...neighborsUtils.getIndexes(cell),\n        ]);\n        const minedIndexes = new Set<number>();\n\n        while (minedIndexes.size < minesCount) {\n          minedIndexes.add(\n            restIndexes[Math.floor(Math.random() * restIndexes.length)]\n          );\n        }\n\n        minedIndexes.forEach((index) => {\n          draft[index].isMined = true;\n        });\n\n        draft.forEach((item) => {\n          if (!item.isMined) {\n            item.value = neighborsUtils.countMined(draft, item);\n          }\n        });\n      })\n    );\n    setMineFieldStatus({ ...mineFieldStatus, isSetup: true });\n  };\n\n  const openCell = (cell: Cell) => {\n    const { index, isMined } = cell;\n\n    setMineField(\n      isMined\n        ? getBustedMineField((draft) => {\n            draft[index].isBusted = true;\n          })\n        : getFloodFilledMineField(cell)\n    );\n  };\n\n  const toggleFlag = useRefCallback(({ index, isFlagged }: Cell) => {\n    setMineField(\n      produce(mineField, (draft) => {\n        draft[index].isFlagged = !isFlagged;\n      })\n    );\n    setMineFieldStatus(\n      produce(mineFieldStatus, (draft) => {\n        draft.hiddenMinesCount += isFlagged ? 1 : -1;\n      })\n    );\n  });\n\n  const openNeighbors = (cell: Cell) => {\n    if (neighborsUtils.canFloodFill(mineField, cell)) {\n      setMineField(getFloodFilledMineField(cell));\n    } else if (neighborsUtils.canOpen(mineField, cell)) {\n      setMineField(\n        getBustedMineField((draft) => {\n          neighborsUtils.getIndexes(cell).forEach((index) => {\n            const neighbor = draft[index];\n            const { isMined, isFlagged } = neighbor;\n\n            if (isMined && !isFlagged) {\n              neighbor.isBusted = true;\n            } else if (!isMined && !isFlagged) {\n              neighbor.isVisible = true;\n            }\n          });\n        })\n      );\n    }\n  };\n\n  const reset = () => {\n    setMineField(emptyMineField);\n    setMineFieldStatus(initialMineFieldStatus);\n  };\n\n  useDidUpdate(reset, emptyMineField);\n\n  useDidUpdate(() => {\n    if (mineField.some(({ isBusted }) => isBusted)) {\n      setMineFieldStatus({ ...mineFieldStatus, isBusted: true });\n    } else if (\n      !mineField.some(({ isMined, isVisible }) => !(isMined || isVisible))\n    ) {\n      setMineField(\n        produce(mineField, (draft) => {\n          draft.forEach((cell) => {\n            if (cell.isMined) {\n              cell.isFlagged = true;\n            }\n          });\n        })\n      );\n      setMineFieldStatus({\n        ...mineFieldStatus,\n        isSolved: true,\n        hiddenMinesCount: 0,\n      });\n    }\n  }, mineField);\n\n  return {\n    mineField,\n    mineFieldParams,\n    mineFieldStatus,\n    setMineFieldParams,\n    setup,\n    openCell,\n    toggleFlag,\n    openNeighbors,\n    reset,\n  };\n};\n\nexport default useMineField;\n","const formatCount = (count = 0) => `000${count}`.slice(-3);\n\nexport default formatCount;\n","import { memo } from 'react';\nimport formatCount from 'utils/formatCount';\n\nconst Counter = ({ count }: { count: number }) => (\n  <div>{formatCount(count)}</div>\n);\n\nexport default memo(Counter);\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { memo } from 'react';\n\nimport styles from './face.module.scss';\n\ninterface Props {\n  frown?: boolean;\n  smile?: boolean;\n  onClick?: () => void;\n}\n\nconst Face = ({ frown, smile, onClick }: Props) => {\n  let icon = <FontAwesomeIcon icon={['far', 'meh']} />;\n\n  if (frown) {\n    icon = <FontAwesomeIcon icon={['far', 'frown']} />;\n  }\n\n  if (smile) {\n    icon = <FontAwesomeIcon icon={['far', 'smile']} />;\n  }\n\n  return (\n    <button type=\"button\" className={styles.face} onClick={onClick}>\n      {icon}\n    </button>\n  );\n};\n\nexport default memo(Face);\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback: () => void, interval?: number | null) => {\n  const callbackRef = useRef<typeof callback>();\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  useEffect(() => {\n    if (!interval) {\n      return undefined;\n    }\n\n    const intervalId = setInterval(() => {\n      callbackRef.current?.();\n    }, interval);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [interval]);\n};\n\nexport default useInterval;\n","import Counter from 'components/Counter';\nimport Face from 'components/Face';\nimport MinesweeperContext from 'contexts/minesweeper';\nimport useDidUpdate from 'hooks/useDidUpdate';\nimport useInterval from 'hooks/useInterval';\nimport useRefCallback from 'hooks/useRefCallback';\nimport { useContext, useState } from 'react';\n\nimport styles from './indicators.module.scss';\n\nconst Indicators = () => {\n  const { mineFieldStatus, mineFieldParams, reset } = useContext(\n    MinesweeperContext\n  );\n\n  const { isSetup, isSolved, isBusted, hiddenMinesCount } = mineFieldStatus;\n\n  const [secondsCount, setSecondsCount] = useState(0);\n\n  const handleFaceClick = useRefCallback(() => {\n    setSecondsCount(0);\n    reset();\n  });\n\n  useInterval(\n    () => {\n      setSecondsCount(secondsCount + 1);\n    },\n    isSetup && !(isSolved || isBusted) ? 1e3 : null\n  );\n\n  useDidUpdate(() => {\n    setSecondsCount(0);\n  }, mineFieldParams);\n\n  return (\n    <div className={styles.indicators}>\n      <Counter count={hiddenMinesCount} />\n      <Face frown={isBusted} smile={isSolved} onClick={handleFaceClick} />\n      <Counter count={secondsCount} />\n    </div>\n  );\n};\n\nexport default Indicators;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { memo, SyntheticEvent } from 'react';\n\nimport styles from './cell.module.scss';\n\ninterface Props {\n  cell: Cell;\n  onClick?: (cell: Cell) => void;\n  onMouseDown?: (event: SyntheticEvent<HTMLButtonElement>, cell: Cell) => void;\n  onContextMenu?: (cell: Cell) => void;\n}\n\nconst Cell = ({ cell, onClick, onMouseDown, onContextMenu }: Props) => {\n  const { value, isVisible, isFlagged, isMined, isWrong, isBusted } = cell;\n\n  const visibleStyles = classNames(styles.cell, styles.visible);\n\n  const handleClick = () => {\n    onClick?.(cell);\n  };\n\n  const handleContextMenu = () => {\n    onContextMenu?.(cell);\n  };\n\n  const handleMouseDown = (event: SyntheticEvent<HTMLButtonElement>) => {\n    onMouseDown?.(event, cell);\n  };\n\n  if ((isMined && isVisible) || isBusted || isWrong) {\n    return (\n      <button\n        type=\"button\"\n        className={classNames(visibleStyles, {\n          [styles.busted]: isBusted,\n          [styles.wrong]: isWrong,\n        })}\n      >\n        <FontAwesomeIcon icon={['fas', 'bomb']} />\n      </button>\n    );\n  }\n\n  if (isFlagged) {\n    return (\n      <button\n        type=\"button\"\n        className={styles.cell}\n        onContextMenu={handleContextMenu}\n      >\n        <FontAwesomeIcon icon={['far', 'flag']} />\n      </button>\n    );\n  }\n\n  if (!isVisible) {\n    return (\n      <button\n        type=\"button\"\n        aria-label=\"cell\"\n        className={styles.cell}\n        onClick={handleClick}\n        onContextMenu={handleContextMenu}\n      />\n    );\n  }\n\n  if (!value) {\n    return <button type=\"button\" aria-label=\"cell\" className={visibleStyles} />;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(visibleStyles, styles[`value_${value}`])}\n      onMouseDown={handleMouseDown}\n    >\n      {value}\n    </button>\n  );\n};\n\nexport default memo(Cell);\n","import classNames from 'classnames';\nimport Cell from 'components/Cell';\nimport cellStyles from 'components/Cell/cell.module.scss';\nimport MinesweeperContext from 'contexts/minesweeper';\nimport useRefCallback from 'hooks/useRefCallback';\nimport { SyntheticEvent, useContext } from 'react';\n\nimport styles from './mineField.module.scss';\n\nconst MineField = () => {\n  const {\n    mineFieldParams: { width = 0 } = {},\n    mineField = [],\n    mineFieldStatus: { isSetup, isBusted, isSolved } = {} as MineFieldStatus,\n    setup,\n    openCell,\n    toggleFlag,\n    openNeighbors,\n  } = useContext(MinesweeperContext);\n\n  const handleContextMenu = (event: SyntheticEvent<HTMLDivElement>) => {\n    event.preventDefault();\n  };\n\n  const handleCellClick = useRefCallback((cell: Cell) => {\n    (isSetup ? openCell : setup)(cell);\n  });\n\n  const handleCellMouseDown = useRefCallback(\n    (\n      { target, nativeEvent }: SyntheticEvent<HTMLButtonElement>,\n      cell: Cell\n    ) => {\n      const handleMouseUp = (event: Event) => {\n        if ((nativeEvent as MouseEvent).which !== (event as MouseEvent).which) {\n          openNeighbors(cell);\n        }\n\n        target.removeEventListener('mouseup', handleMouseUp);\n      };\n\n      target.addEventListener('mouseup', handleMouseUp);\n    }\n  );\n\n  return (\n    <div\n      data-testid={styles.mine_field}\n      className={styles.mine_field}\n      onContextMenu={handleContextMenu}\n    >\n      <div\n        data-testid={styles.row}\n        className={classNames(styles.row, styles[`row_${width}`], {\n          [styles.disabled]: isBusted || isSolved,\n        })}\n        style={{ width: width * Number.parseFloat(cellStyles.cellSize) }}\n      >\n        {mineField.map((cell) => (\n          <Cell\n            cell={cell}\n            key={cell.id}\n            onClick={handleCellClick}\n            onMouseDown={handleCellMouseDown}\n            onContextMenu={toggleFlag}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MineField;\n","import { memo } from 'react';\r\n\r\nimport styles from './radio.module.scss';\r\n\r\ninterface Props {\r\n  name: string;\r\n  label: string;\r\n  checked?: boolean;\r\n  onChange?: () => void;\r\n}\r\n\r\nconst Radio = ({ name, label, checked, onChange }: Props) => (\r\n  <div className={styles.radio}>\r\n    <input\r\n      type=\"radio\"\r\n      name={name}\r\n      className={styles.input}\r\n      defaultChecked={checked}\r\n      onChange={onChange}\r\n    />\r\n    <span className={styles.label}>{label}</span>\r\n  </div>\r\n);\r\n\r\nexport default memo(Radio);\r\n","import Radio from 'components/Radio';\r\nimport mineFieldsParams from 'constants/mineFieldsParams';\r\nimport MinesweeperContext from 'contexts/minesweeper';\r\nimport { useCallback, useContext } from 'react';\r\n\r\nimport styles from './mineFieldParams.module.scss';\r\n\r\nconst MineFieldParams = () => {\r\n  const { mineFieldParams, setMineFieldParams } = useContext(\r\n    MinesweeperContext\r\n  );\r\n\r\n  const handleMineFieldParamsChange = (params: MineFieldParams) =>\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useCallback(() => {\r\n      setMineFieldParams(params);\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n  return (\r\n    <form className={styles.mine_field_params}>\r\n      {mineFieldsParams.map((params) => {\r\n        const { label, id } = params;\r\n\r\n        return (\r\n          <Radio\r\n            name=\"mine-field-params\"\r\n            label={label}\r\n            key={id}\r\n            checked={label === mineFieldParams.label}\r\n            onChange={handleMineFieldParamsChange(params)}\r\n          />\r\n        );\r\n      })}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MineFieldParams;\r\n","import Footer from 'components/Footer';\nimport Header from 'components/Header';\nimport { MinesweeperProvider } from 'contexts/minesweeper';\nimport useMineField from 'hooks/useMineField';\n\nimport Indicators from '../Indicators';\nimport MineField from '../MineField';\nimport MineFieldParams from '../MineFieldParams';\nimport styles from './minesweeper.module.scss';\n\nconst Minesweeper = () => (\n  <MinesweeperProvider value={useMineField()}>\n    <Header />\n    <main className={styles.minesweeper}>\n      <Indicators />\n      <MineField />\n      <MineFieldParams />\n    </main>\n    <Footer />\n  </MinesweeperProvider>\n);\n\nexport default Minesweeper;\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faFlag,\n  faFrown,\n  faMeh,\n  faSmile,\n} from '@fortawesome/free-regular-svg-icons';\nimport { faBomb } from '@fortawesome/free-solid-svg-icons';\n\nconst setupIcons = () => {\n  library.add(faGithub, faBomb, faFlag, faMeh, faFrown, faSmile);\n};\n\nexport default setupIcons;\n","import 'index.scss';\n\nimport Minesweeper from 'containers/Minesweeper';\nimport { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport setupIcons from 'setupIcons';\n\nsetupIcons();\n\nrender(\n  <StrictMode>\n    <Minesweeper />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}